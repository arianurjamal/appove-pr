name: Auto Approve Pull Request

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to auto-approve'
        required: true
        type: number
      comment:
        description: 'Optional approval comment'
        required: false
        type: string
        default: 'Auto-approved by workflow'

permissions:
  pull-requests: write
  contents: read
  issues: write

jobs:
  auto-approve:
    name: Auto Approve PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PR number
        id: pr
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "number=${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT
          else
            echo "number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          fi

      - name: Get PR details
        id: pr_details
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const prNumber = ${{ steps.pr.outputs.number }};
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            
            core.setOutput('author', pr.user.login);
            core.setOutput('title', pr.title);
            core.setOutput('branch', pr.head.ref);
            core.setOutput('base', pr.base.ref);
            core.setOutput('state', pr.state);
            
            console.log('PR Details:');
            console.log('- Author:', pr.user.login);
            console.log('- Title:', pr.title);
            console.log('- Branch:', pr.head.ref);
            console.log('- Base:', pr.base.ref);
            console.log('- State:', pr.state);

      - name: Add auto-approve label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const prNumber = ${{ steps.pr.outputs.number }};
            
            // Create label if doesn't exist
            try {
              await github.rest.issues.createLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'auto-approved',
                color: '0e8a16',
                description: 'This PR has been auto-approved'
              });
            } catch (error) {
              console.log('Label may already exist:', error.message);
            }
            
            // Add label to PR
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: ['auto-approved', 'ready-to-merge']
            });

      - name: Approve Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const prNumber = ${{ steps.pr.outputs.number }};
            const author = '${{ steps.pr_details.outputs.author }}';
            const title = '${{ steps.pr_details.outputs.title }}';
            const branch = '${{ steps.pr_details.outputs.branch }}';
            
            const approvalComment = `${{ github.event.inputs.comment }}` || 
              `‚úÖ **Auto-Approved**\n\nThis PR has been automatically approved and is ready for merge.\n\n**PR Information:**\n- Author: @${author}\n- Title: ${title}\n- Branch: \`${branch}\`\n- Approved by: GitHub Actions Bot\n- Approval Time: ${new Date().toISOString()}\n\n---\n*This is an automated approval. Please ensure all checks pass before merging.*`;
            
            try {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                event: 'APPROVE',
                body: approvalComment
              });
              console.log('‚úÖ PR approved successfully');
            } catch (error) {
              console.log('‚ùå Error approving PR:', error.message);
              
              // If approval fails, at least add a comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: `‚ö†Ô∏è Auto-approval attempted but failed. Reason: ${error.message}\n\n${approvalComment}`
              });
              
              throw error;
            }

      - name: Post approval summary comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const prNumber = ${{ steps.pr.outputs.number }};
            const prUrl = `https://github.com/${{ github.repository }}/pull/${prNumber}`;
            
            const summaryComment = `
            ## ü§ñ Auto-Approval Summary
            
            | Item | Value |
            |------|-------|
            | **PR Number** | #${prNumber} |
            | **Author** | @${{ steps.pr_details.outputs.author }} |
            | **Branch** | \`${{ steps.pr_details.outputs.branch }}\` ‚Üí \`${{ steps.pr_details.outputs.base }}\` |
            | **Status** | ‚úÖ Approved |
            | **Approved By** | GitHub Actions (Auto-Approve Workflow) |
            | **Timestamp** | ${new Date().toLocaleString()} |
            | **Direct Link** | [View PR](${prUrl}) |
            
            ### Public Access Information
            
            This PR can be accessed publicly via:
            - **Web URL:** ${prUrl}
            - **API Endpoint:** \`https://api.github.com/repos/${{ github.repository }}/pulls/${prNumber}\`
            
            ### Next Steps
            1. ‚úÖ All required checks must pass
            2. ‚úÖ Review any remaining comments
            3. ‚úÖ Merge when ready
            
            ---
            *üåê This PR is publicly accessible and has been auto-approved. Anyone can view and track its progress.*
            `;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: summaryComment
            });

      - name: Generate workflow summary
        run: |
          echo "# üéâ PR Auto-Approved Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## PR Details" >> $GITHUB_STEP_SUMMARY
          echo "- **PR Number:** #${{ steps.pr.outputs.number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Author:** @${{ steps.pr_details.outputs.author }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Title:** ${{ steps.pr_details.outputs.title }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** \`${{ steps.pr_details.outputs.branch }}\` ‚Üí \`${{ steps.pr_details.outputs.base }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ‚úÖ Approved" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Public Access" >> $GITHUB_STEP_SUMMARY
          echo "This PR is publicly accessible at:" >> $GITHUB_STEP_SUMMARY
          echo "- **URL:** https://github.com/${{ github.repository }}/pull/${{ steps.pr.outputs.number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **API:** \`https://api.github.com/repos/${{ github.repository }}/pulls/${{ steps.pr.outputs.number }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Auto-approved by GitHub Actions workflow - publicly accessible*" >> $GITHUB_STEP_SUMMARY

      - name: Notify approval status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "‚úÖ PR #${{ steps.pr.outputs.number }} has been auto-approved successfully!"
            echo "üåê The PR is now publicly accessible and ready for merge."
          else
            echo "‚ùå Failed to auto-approve PR #${{ steps.pr.outputs.number }}"
            echo "‚ö†Ô∏è Please check the workflow logs for details."
          fi